(function() {
  const colors = (["red", "yellow", "blue", "green"]);
  let socket;
  window.addEventListener("load", main);

  function main() {
    if (!window.sessionStorage.getItem("color")) {
      window.sessionStorage.setItem("color", colors[Math.floor(Math.random() * colors.length)]);
    }
  
    document.querySelector("body").classList.add(window.sessionStorage.getItem("color"));
    document.querySelector("#name-entry-container button").addEventListener("click", createWebSocket);
  }

  /**
   * Creates the web socket used to communicate with the game server.
   */
  function createWebSocket() {
    console.log("cool!");
    document.querySelector("#name-entry-container button").removeEventListener("click", createWebSocket);
    let socketUrl = "";
    if (window.location.protocol === "https:") {
      socketUrl += "wss://";
    } else {
      socketUrl += "ws://";
    }

    socketUrl += window.location.host;
    console.log(socketUrl);
    socket = new WebSocket(socketUrl);
    
    let name = document.getElementById("name-entry").value;
    if (!name || name.length <= 0) {
      name = "Default Daniel";
    }

    let game = "";
    window.location.search.substr(1)
      .split("&")
      .forEach(function(e) {
        let arg = e.split("=");
        if (arg[0] === "id") {
          game = arg[1];
        }
    });

    if (game.length === 0) {
      console.error("no game id found!");
    } else {
      let packet = {
        "name": name,
        "game": game
      };

      socket.onopen = () => {
        socket.send(JSON.stringify(packet));
      };

      socket.addEventListener("message", socketHandleEvent);
      document.getElementById("ready-screen-container").classList.remove("hidden");
      document.getElementById("name-entry-container").classList.add("hidden");
    }
  }

  /**
   * Called whenever our socket receives an event.
   * @param {MessageEvent} event - event generated by a socket message. 
   */
  function socketHandleEvent(event) {
    console.log(event);
    let packet = JSON.parse(event.data);
    console.log(packet.content);
    switch (packet.type) {
      case "readyinfo":
        console.log("READYINFO");
        updateReadyState(packet.content);
    }
  }

  /**
   * Called whenever the socket receives an update pertaining to the ready state of players.
   * @param {Array} content - an array of user names and their ready states.
   */
  function updateReadyState(content) {
    console.log(content);
    console.log("i was called");
    let playercount = 0;
    // create new elements somewhere
    // update player count
    let playerlist = document.getElementById("player-list");
    while (playerlist.children.length) {
      playerlist.removeChild(playerlist.children[0]);
    }

    let itemsInBox = 0;
    let itemBox = document.createElement("div");
    itemBox.classList.add("ready-state-pair");
    for (let item of content) {
      if (itemsInBox >= 2) {
        playerlist.appendChild(itemBox);
        itemBox = document.createElement("div");
        itemBox.classList.add("ready-state-pair");
        itemsInBox = 0;
      }

      let box = document.createElement("div");
      let name = document.createElement("p");
      box.classList.add("ready-state");
      name.textContent = item.name;
      box.appendChild(name);
      itemBox.appendChild(box);
      if (item.ready) {
        playercount++;
        box.classList.add("ready");
      }

      itemsInBox++;
    }

    playerlist.appendChild(itemBox);

    

    document.getElementById("player-count").textContent = "ready: " + playercount.toString(10) + "/" + content.length;
  }
})();